// GRID
$grid-width: 114rem;
$gutter-vertical: 8rem;
$gutter-vertical-small: 6rem;
$gutter-horizontal: 2rem;

$color-primary-blue: #6979FB;
$color-light-gray: #FFE8DA;
$color-dark: #000;
$color-primary: rgba(255, 255, 255, 0.918);
$color-light-1: #efefefe5;
$color-primary-1: #fff;


.heading__primary {
  text-align: left;
  font-size: 2rem;
  color: $color-primary-blue;
  margin-top: 3rem;
  margin-left: 7rem;
  font-weight: 400;
}

.heading__tertiary {
  color: $color-primary-blue;
  font-size: 1.5rem;
  font-weight: 400;
  margin-top: 2rem;
  margin-left: 2rem;
  margin-bottom: 4rem;
}

.span__image {
  margin-left: 2rem;
}

.form {
  margin-top: 2rem;
  &__group:not(:last-child) {
    margin-bottom: 0rem;
  }

  &__input {
    font-size: 1.5rem;
    font-family: inherit;
    color: inherit;
    padding: 1rem 2rem;
    border-radius: 2px;
    background-color: $color-primary-1;
    border: none;
    border-bottom: 3px solid $color-primary-1;
    width: 90%;
    display: block;
    transition: all .3s;

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-dark, .1);
      border-bottom: 3px solid $color-dark;
     }

     &:focus:invalid {
      border-bottom: 3px solid $color-dark;
     }

     &::-webkit-input-placeholder {
      color: $color-dark;
     }
  }

   &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: .7rem;
    display: block;
    transition: all .3s; 
   }

   &__input:placeholder-shown + &__label {
     opacity: 0;
     visibility: hidden;
     color: $color-dark;
     transform: translateY(-4rem); 
   }
}

.btn {
  &,
  &:link,
  &:visited {
    text-decoration: none;
    padding: 1rem 2rem;
    display: block;
    border-radius: 2rem;
    transition: all .2s;
    position: relative;
    font-size: 1rem;
    margin-left: 1rem;
    margin-bottom: 2rem;
    border: none;
    cursor: pointer;
  }
  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-dark,.2);

    &::after {
      transform: scaleX(1.4) scale(1.4);
      opacity: 0;
  }
  }

  &:active,
  &:focus {
    outline: none;
     transform: translateY(-1px);
     box-shadow: 0 .5rem 1rem rgba($color-dark, .2);
  }
  &--blue {
    background-color: $color-primary-blue;
    color: $color-primary-1;
  }

  &::after {
    background-color: $color-primary-1;
  }
}

.contact__image {
  width: 70%;
  height: 70%;
  margin-top: 3rem;
}

.section-features {
  background: $color-light-gray;
  height: auto;
  margin: auto;
  width: 100%;
  background-size: cover;
  padding: 2rem 0rem;
  margin-top: 2rem;
}

.icon__image {
  margin-left: 2em;
  color: $color-primary-blue;
}

.heading__secondary {
  font-size: 1rem;
  color: $color-dark;
  margin-top: 2rem;
  font-weight: 300;
  text-align: left;
  margin-left: 2rem;
}

.long__size {
  color: $color-dark;
  font-size: 1rem;
  margin-top: 1rem;
  text-align: left;
  margin-left: 2rem;
  line-height: 1.5rem;
}

.images {
  width: 100%;
  height: 100%;
}

.plan-box {
  background-color: $color-primary;
  border-radius: 5px;
  width: 70%;
  margin-left: 10rem;
  box-shadow: 0 2px 2px $color-light-1;
}

.row {
  max-width: $grid-width;
  margin: 0 auto;

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @mixin respond($breakpoint) {
      @if $breakpoint == tab-port {
        margin-bottom: $gutter-vertical-small;
      }
    }
  }
  

  &::after {
    content: "";
    display: table;
    clear: both;
  }

  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @mixin respond($breakpoint) {
        @if $breakpoint == tab-port {
          margin-right: 0;
          margin-bottom: $gutter-vertical-small;
        }
      }
    }
    @mixin respond($breakpoint) {
      @if $breakpoint == tab-port {
        width: 100% !important;
      }
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }
  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }
  .col-2-of-3 {
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }
  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }
  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  }
  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }
}
